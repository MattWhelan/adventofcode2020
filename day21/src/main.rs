use std::collections::HashMap;
use anyhow::Result;
use lazy_static::lazy_static;
use regex::Regex;
use std::fmt;
use std::fmt::{Display, Formatter};
use std::str::FromStr;
use itertools::Itertools;
use num::integer::Roots;

#[derive(Debug, Copy, Clone, Eq, PartialEq, Hash)]
enum Pixel {
    On,
    Off,
    Marked,
}

impl From<char> for Pixel {
    fn from(ch: char) -> Self {
        match ch {
            '#' => Pixel::On,
            '.' => Pixel::Off,
            _ => panic!("Bad pixel"),
        }
    }
}

impl Display for Pixel {
    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
        match self {
            Pixel::On => write!(f, "#"),
            Pixel::Marked => write!(f, "O"),
            Pixel::Off => write!(f, "."),
        }
    }
}

#[derive(Debug, Clone, Eq, PartialEq)]
struct Tile {
    id: u64,
    image: Vec<Vec<Pixel>>,
}

impl Tile {
    fn borders(&self) -> impl Iterator<Item=Vec<Pixel>> {
        let border_list = vec![
            self.image[0].clone(),
            self.image.iter().map(|row| row[row.len()-1]).collect(),
            self.image[self.image.len()-1].clone(),
            self.image.iter().map(|row| row[0]).collect(),
        ];
        border_list.into_iter()
    }

    fn flip(&self) -> Tile {
        let mut img = self.image.clone();
        img.reverse();
        Tile {
            id: self.id,
            image: img
        }
    }

    fn rotate_cw(&self) -> Tile {
        let mut img = self.image.clone();
        let size = img.len();
        for i in 0..size {
            for j in 0..size {
                img[i][j] = self.image[size-j-1][i]
            }
        }
        Tile {
            id: self.id,
            image: img
        }
    }

    fn trimmed(&self) -> Tile {
        let mut img = Vec::from(&self.image[1..self.image.len()-1]);
        img.iter_mut().for_each(|row| {
            row.pop();
            row.remove(0);
        });

        Tile {
            id: self.id,
            image: img
        }
    }

    fn find(&self, needle: &Tile) -> Vec<(usize, usize)> {
        let mut ret = Vec::new();

        let h = needle.image.len();
        let w = needle.image[0].len();
        for i in 0..self.image.len()-h {
            for j in 0..self.image[i].len()-w {
                let mut found = true;
                for s in 0..h {
                    for t in 0..w {
                        if needle.image[s][t] == Pixel::On && self.image[i+s][j+t] == Pixel::Off {
                            found = false;
                            break;
                        }
                    }
                    if !found {
                        break;
                    }
                }
                if found {
                    ret.push((i,j))
                }
            }
        }

        ret
    }

    fn count_on(&self) -> usize {
        self.image.iter()
            .map(|row| row.iter().filter(|&p| *p == Pixel::On).count())
            .sum()
    }
}

impl FromStr for Tile {
    type Err = anyhow::Error;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        lazy_static! {
            static ref RE: Regex = Regex::new(r"^Tile (\d+):$").unwrap();
        }
        let mut line_it = s.lines();
        let id_line = line_it.next().unwrap();

        let caps = RE.captures(id_line).unwrap();

        let grid: Vec<Vec<Pixel>> = line_it
            .map(|l| l.chars().map(|ch| ch.into()).collect())
            .collect();

        Ok(Tile {
            id: caps[1].parse()?,
            image: grid,
        })
    }
}

impl Display for Tile {
    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {
        let s = self.image.iter()
            .map(|row| row.iter().map(|p| p.to_string()).collect::<String>())
            .join("\n");
        write!(f, "{}", &s)
    }
}

fn find_border_matches(border: &[Pixel], tile: &Tile) -> usize {
    let forward = tile.borders().filter(|b| b.as_slice() == border).count();
    let rborder: Vec<Pixel> = border.iter().rev().copied().collect();
    let reverse = tile.borders().filter(|b| b.as_slice() == rborder).count();
    forward + reverse
}

fn main() -> Result<()> {
    let input: Vec<Tile> = INPUT.split("\n\n").map(|s| s.parse().unwrap()).collect();

    let square_size = input.len().sqrt();
    dbg!(&square_size);

    let corners: Vec<_> = input.iter()
        .filter(|t| {
            let mut match_count = 0;
            for b in t.borders() {
                for tile in input.iter() {
                    if &tile != t {
                        match_count += find_border_matches(&b, tile);
                    }
                }
            }
            match_count == 2
        })
        .collect();

    let part1 : u64 = corners.iter()
        .map(|t| t.id)
        .product();

    println!("Corner Product: {}", part1);

    let start = corners[0];
    println!("{}\n", &start);

    let start = (0..3 as usize).filter_map(|n| {
        let mut t = start.clone();
        for _ in 0..n {
            t = t.rotate_cw();
        }
        let mut match_count = 0;
        for b in t.borders().skip(1).take(2) {
            for tile in input.iter() {
                if tile != start {
                    match_count += find_border_matches(&b, tile);
                }
            }
        }
        if match_count == 2 {
            Some(t)
        } else {
            dbg!(&match_count);
            None
        }
    }).next().unwrap();

    //Now we have oriented our start
    println!("{}", &start);

    let mut available = input.iter()
        .map(|t| (t.id, t.clone()))
        .collect::<HashMap<_,_>>();

    let mut grid : Vec<Vec<Tile>> = Vec::new();
    for i in 0..square_size {
        grid.push(Vec::new());
        for j in 0..square_size {
            if i == 0 && j == 0 {
                grid[i].push(start.clone());
                available.remove(&start.id);
            } else {
                let mut above = None;
                let mut left = None;
                if i > 0 {
                    above = grid[i-1][j].borders().nth(2);
                }
                if j > 0 {
                    left = grid[i][j-1].borders().nth(1);
                }
                // For each available tile, try it against the edges
                let next_tile = available.values()
                    .flat_map(|t| {
                        rot_flip(t)
                    }).filter(|t| {
                        let b = t.borders().collect::<Vec<_>>();
                        if let (Some(a), Some(l)) = (above.as_ref(), left.as_ref()) {
                            a == &b[0] && l == &b[3]
                        } else if let Some(a) = above.as_ref() {
                            a == &b[0]
                        } else if let Some(l) = left.as_ref() {
                            l == &b[3]
                        } else {
                            false
                        }
                    }).next().unwrap();
                available.remove(&next_tile.id);
                grid[i].push(next_tile);
            }
        }
    }

    let full_image = grid.iter().flat_map(|tile_row| {
        let trimmed_row = tile_row.iter().map(|t| t.trimmed()).collect::<Vec<_>>();
        (0..trimmed_row[0].image.len()).map(move |i| {
            trimmed_row.iter()
                .map(|t| &t.image[i])
                .flatten()
                .copied()
                .collect::<Vec<Pixel>>()
        })
    }).collect::<Vec<Vec<Pixel>>>();
    let big_tile = Tile {
        id: 0,
        image: full_image,
    };

    let seamonster_pat = r"Tile 1:
..................#.
#....##....##....###
.#..#..#..#..#..#...";

    let monster = Tile::from_str(seamonster_pat).unwrap();

    let big_tile = rot_flip(&big_tile).iter()
        .filter(|&t| {
            !t.find(&monster)
                .is_empty()
        })
        .next().unwrap().clone();

    println!("\nMap:\n{}\n", &big_tile);

    let monster_count = monster.count_on();

    let positions = big_tile.find(&monster);
    let map_count = big_tile.count_on();
    dbg!(map_count - monster_count*positions.len());

    Ok(())
}

fn rot_flip(t: &Tile) -> Vec<Tile> {
    let a = t.clone();
    let b = t.rotate_cw();
    let c = b.rotate_cw();
    let d = c.rotate_cw();

    let f = t.flip();
    let g = f.rotate_cw();
    let h = g.rotate_cw();
    let i = h.rotate_cw();
    vec![
        a,
        b,
        c,
        d,
        f,
        g,
        h,
        i,
    ]
}

const INPUT: &str = r#"Tile 1051:
#...#...##
.....#....
....#.....
....#.....
.....##...
.......#.#
#.......##
..#..#....
#.#.#....#
###.##.#.#

Tile 3461:
##.#####.#
.....#..##
...#....##
#.#.......
..........
..###..##.
......#...
##....#...
.#......#.
..#.###.#.

Tile 3209:
.##.#.###.
#...#...##
..........
##........
#...#.....
#..#.....#
##...#..##
##.....#.#
.#..##....
..###..###

Tile 2039:
..#.#.###.
#..#..####
#...#....#
##.#..#...
.........#
#......#.#
#.......##
#...#....#
#......#.#
..##.#..#.

Tile 1579:
.####...##
...#....#.
.##.#..#.#
#....##.##
#....#.#.#
..##......
##.....#..
#...#.....
####......
#..######.

Tile 2503:
##.#.....#
.......#..
#........#
#....#.#..
#...##....
#.#..#..#.
#..###....
..#....###
...#..#..#
.#.#.....#

Tile 2719:
#.####..##
###.......
##.#.....#
#..###.#..
.........#
.........#
##........
##........
#..#...#..
.##..#.#.#

Tile 2957:
.####..###
###......#
#.#......#
#.##......
#.##.#..#.
#..##..#.#
#..#..#...
#.#....#..
.....#.#..
######.###

Tile 2777:
.#.##.##.#
..........
#.........
#.#...#...
#.##....#.
........##
..........
........##
#.....#...
#.#..#.###

Tile 3847:
#.#.#####.
....#.....
..........
#.......##
#.........
#.........
##....#...
###.#.....
#.......#.
.#.##...#.

Tile 3581:
#.#..#..#.
#.#..#....
.#.......#
#........#
.........#
#.........
..#.......
..#.......
#..#......
..#..#####

Tile 1373:
####.##.#.
#...#..###
##....#...
...#.....#
#.##.....#
......#...
..#....#..
#..###.##.
#....#.##.
.###.#.#.#

Tile 3467:
###..#...#
..#.....##
...#.....#
.....#...#
.#.#...#.#
##.#...##.
...##....#
#.........
.#....#...
#...##..#.

Tile 3889:
..#.#...##
#.......##
#.........
#.........
...#.....#
.......#.#
...#......
#........#
#........#
#####.#...

Tile 1361:
.....#..#.
....#.#.#.
....#....#
#..#.##.#.
#...#....#
...####..#
....#.#..#
.......#..
...#.##..#
#..#..##..

Tile 3631:
.##..#.###
#.##.....#
#....###..
.......###
........#.
#.....#..#
......#..#
.#.#..#...
#........#
#..#.##.#.

Tile 2243:
.....#.###
.........#
.......#..
..##......
....#.....
..........
#......#..
#....#...#
##.....#.#
##...##.##

Tile 1367:
#.#..#..##
##......#.
#....#.#.#
.##....#.#
...#....#.
.......##.
##..#....#
........#.
.....#....
.###......

Tile 1451:
.#..####.#
.....#...#
..........
####......
#.#....#..
.#.#...##.
#........#
#...###..#
#.....#..#
#.##.#####

Tile 3967:
######.###
##.......#
#.#......#
#..#......
##.#..#.#.
#.#.......
###..#...#
.#.......#
..#...#..#
#..##.###.

Tile 2341:
##.....##.
..........
........#.
#.........
#........#
###.#.##.#
#.##....##
........#.
#.....##..
#..##..##.

Tile 2797:
##.#.#..##
....#.....
#.....#...
#........#
#...#.###.
...#...#.#
#.........
..........
##.......#
..#.###.##

Tile 1979:
..##.#....
#..##.....
..#.##.###
......#...
.....#....
##....#...
...###....
#..#.#.###
..#......#
..#..#.#..

Tile 3217:
#.#...##.#
#.........
#..#..#.##
#.#...###.
.......###
..####....
#........#
##....#..#
#.....#..#
..##.#####

Tile 3709:
##..#..###
#.#......#
###.#.....
......#...
.#.#......
#.##..#...
#........#
.#.#......
#.#......#
.##....###

Tile 3463:
.#.###..#.
#..#......
#.......##
....#.....
##..#..#..
#..#...##.
#..#......
.....#.#..
....#....#
....#..#.#

Tile 2267:
.#####....
.....###.#
##.##.....
#.##.#...#
.........#
##.....#..
#....#...#
.........#
##........
##...#.##.

Tile 1409:
.#.#.#.###
...###..##
#........#
...#.....#
......#..#
#.........
#.....##.#
##....#..#
#....#...#
..####..#.

Tile 1109:
..###.###.
#....##...
#.........
....###..#
.......#.#
.......#.#
##.....#..
##.......#
...#.....#
.###...#.#

Tile 2333:
##.#.##.#.
.......#..
...#.#.#..
...#.#.#.#
...#..#...
.##......#
.......#..
........#.
##........
.#.#..#...

Tile 2113:
##.#.###.#
....#....#
#.......##
.........#
..#......#
....#.....
#...##..#.
...####..#
###....###
.###.....#

Tile 2161:
..#.#.####
#......#..
........##
...#......
#...#.....
..........
.#.#..###.
.......#.#
.........#
#.....####

Tile 1697:
.#....####
#......#..
#..#.....#
......##..
.....#....
..#.......
.##.......
#######..#
.##..#.#.#
.###.#.##.

Tile 1151:
#..##..#.#
...#..#..#
...#....#.
#.#.....#.
.##..#.#..
..#..#.#..
..##....##
.....#...#
#....#...#
.####.##..

Tile 2089:
.##..#.#.#
....#.....
#......#.#
..........
.....#..#.
..#.#.#..#
#...#....#
#..#.#....
.....#..#.
##...#.#.#

Tile 1423:
###.##..##
#.#..###..
..#.##.###
##....##..
#....##..#
#.#.#.....
#.......#.
#......#..
#..#.....#
#..#.##.#.

Tile 1861:
####.....#
#......#..
...##.#.##
##.......#
.#...#...#
..#.......
#.........
#....##..#
##..#....#
##...###.#

Tile 3659:
###.##..##
##........
.........#
#...##...#
#..#..#.##
#.....#.#.
##..##....
......#..#
....#.....
#####.####

Tile 2141:
#.....#.#.
##...#..#.
.#........
#......#..
........##
....#.....
#........#
#........#
#...#...##
#.####..#.

Tile 3779:
.##.#.#...
#.....#..#
.........#
.#........
..#..#...#
#...#.#...
.....#.##.
..#....#.#
....#....#
######.##.

Tile 2027:
.##.####.#
#......###
#.......#.
#..##.....
..#...#...
#..####..#
#...#.....
#..###....
#.......#.
..#.#.####

Tile 1543:
#...#.#.#.
.#.#......
....#....#
.#........
#.##.#...#
#.........
....#....#
#.......#.
#.....####
##.#.#...#

Tile 2857:
.#.##...##
.#....##.#
..#......#
#...#.....
..........
.........#
###.#....#
##........
....#..#..
##.##.##.#

Tile 3413:
##...###..
#.......##
#........#
#..#......
......#.#.
..........
........#.
#....#....
#....#.#..
.##..#..##

Tile 1453:
..##..#...
#.........
#.........
...#.....#
#.........
#.#.......
....##....
...##....#
..#..#...#
.##.#...#.

Tile 2357:
##.###...#
.........#
..#...#...
#..##....#
#....##..#
#...#.....
.#..#....#
#....#..##
....#...##
#.###.####

Tile 1597:
....##.#..
...#.....#
#......#..
....###.#.
.....##.##
...#......
#......#..
.#......#.
##.......#
####......

Tile 2213:
##.##.#...
#.......#.
....#....#
#......###
.##......#
.#.......#
#........#
#.........
##.#......
..#.#...##

Tile 3529:
.......##.
.#.......#
#.........
.#........
......#..#
.#...#..#.
#.....##.#
.#.#..#..#
.........#
##...#.##.

Tile 2741:
.#####..#.
##....#...
#.#.......
##.#......
#.........
.........#
.........#
##.#..#..#
#.......#.
#.##.##.#.

Tile 2011:
....###.##
#.###.#..#
.#..##....
..........
#.#.##...#
.........#
#...#....#
......#.##
........#.
#.###..#..

Tile 2791:
#.####.###
#..#...#..
.#........
.#..#...#.
##...#....
#...#.....
..#......#
##.......#
#.........
..##..####

Tile 3301:
.#..#.##.#
....#...##
#..#.....#
..........
#.....#...
.#####...#
#.#...#..#
##....#...
.#....#...
####.#..#.

Tile 3089:
#.###.....
......#..#
..##.#.#.#
...#...#.#
#..#..##..
#.#.#.....
#........#
#...##.##.
#.#...#..#
###..#....

Tile 1871:
..##...#.#
###...#..#
##...#....
...#..##..
#....##..#
.#.......#
..#..#####
#.###..#..
..#...#...
...#.###.#

Tile 2579:
...##....#
#.....####
.###.#..##
###.#....#
...#......
#..####.##
#...####..
#...#.....
...#......
...#.##...

Tile 2269:
....#.##..
#..#.#...#
....#....#
.........#
........#.
#....#...#
##.......#
#........#
...#....##
##..##...#

Tile 3643:
####.##.#.
.......##.
...#..#.#.
.........#
..#.##....
.#...##..#
..#....#..
....#..#..
##...##..#
..#.####.#

Tile 2887:
.#..#..###
##....#.##
#..#..#...
.........#
#.........
###.#.#...
#........#
##.#.#....
#.........
##.#.#.###

Tile 1297:
.###.....#
...#.##...
.......#.#
...#......
#.#...#...
...#......
..##..###.
##..######
#....#....
..##...#..

Tile 3433:
###.#.#..#
.#.....#.#
#....#..#.
..###..#.#
...#....#.
#.........
.#.....#.#
#.....#..#
..#.......
#...#..#.#

Tile 2473:
....##..#.
....#....#
..#.......
##.#...#.#
#......#.#
..#......#
#...#..#..
.....#.#.#
....####.#
###.###.#.

Tile 1433:
###.#.###.
#.#.#.....
#........#
#..##....#
#........#
#...#.#...
#......#..
#.........
......#...
.....#.###

Tile 2953:
.######.##
....#..#..
..........
...#......
..#......#
#........#
.##.....##
##........
##......#.
.###..##..

Tile 3613:
#.###.#...
#.........
..........
#.......##
#.........
##....#...
##......#.
..#......#
#...##...#
.#.#..#...

Tile 1999:
#.#####...
.........#
#....#.#..
#.....##.#
#....##.#.
##...#...#
#....##...
........##
.....##..#
###.#.#...

Tile 1279:
.##..##..#
.#.......#
.#..#..#..
.##...####
....#.#.##
#........#
#..#.....#
##.......#
..##.....#
.##......#

Tile 1657:
....#....#
#..#....##
##.......#
#....##.#.
#.#.......
#..#.....#
#.#.#.#...
.#........
##.......#
##.####...

Tile 3259:
###.###.#.
.#...#....
....#....#
........##
...#..#.#.
######...#
#..#####.#
.#...#....
#.###.#...
.#.##.#...

Tile 3527:
.#...##.##
...##.#..#
..##...#..
.#..#..#..
#........#
#....#..#.
.#...##...
#....##...
#..#......
....#.####

Tile 2971:
.#..#.##.#
..........
#......#.#
#.........
........##
#........#
..#......#
#..##....#
#...#..#..
####..##.#

Tile 3533:
.####.#.##
#.#.......
#........#
..........
..#......#
..........
###..#...#
##.......#
##......#.
...#.#.##.

Tile 1571:
#.#....#..
.#....#..#
#.....##..
#......###
.#......#.
.#.....#.#
...#..#..#
###.##..##
###......#
#..##.#.##

Tile 1553:
.#.#.#.###
#.##.....#
#.#.......
..#......#
#.......##
#.....#..#
#.....##..
.#.......#
#.......##
#.###.##.#

Tile 1619:
.##.#.#.##
##..#.#...
#.....##..
..........
#....##..#
##....#..#
#.##..####
#....#.#.#
...#.....#
.##.###.##

Tile 2843:
...#.##.#.
..........
..........
##...##..#
....##....
....#..#.#
.....#..#.
......#.#.
#.....##.#
#.#..##.##

Tile 3541:
##.##.##..
#....##.##
.....###.#
#..#...#..
#.#..##...
#......#.#
##.....#..
#..#.##...
..#...#...
#.##..#.##

Tile 2087:
.###.#.#.#
##.#....#.
#.##......
....#....#
..........
.##.#....#
#..#.#...#
##.#.#.#..
#.#.....#.
#.##....#.

Tile 2711:
###..##..#
.........#
#....#....
......#..#
.#......##
###..##.#.
###.#.....
#.........
..#......#
##........

Tile 2143:
##.#.#..#.
.......###
......##..
####..#...
#.###....#
...#......
##....##.#
#.........
#.#.......
.###..#.##

Tile 1877:
#..###..##
.##.....##
.#...#...#
##..#..#.#
....#....#
#........#
....#.....
.#....#.##
..#...#...
#.#.......

Tile 3943:
#.#.#.#.##
..#.....##
..###.....
..........
#.........
#..#.....#
#..#......
.#..#....#
#.#..#...#
#.#..##.##

Tile 1319:
.#.#.#####
#........#
#.......##
#.#....#.#
...#.#.#..
...#.....#
#.###..##.
....#.....
..........
.####....#

Tile 1483:
...#..##..
.......#..
#..##.....
...##....#
.#...##.##
#.........
.........#
#.#...#...
#.#...#...
..###.###.

Tile 2203:
..#.####.#
#....#..##
.....#...#
#...#.#...
#...####.#
#.#.#.....
#.........
...#......
#.#......#
#..#.#...#

Tile 3457:
.#...#.#.#
.........#
........#.
#......#..
......#...
#.....#...
.##....#..
..#..##.#.
.....#..#.
.#...#.##.

Tile 3719:
.#.#...#.#
#.#...#...
#........#
.........#
#...#.##..
###......#
.##.....#.
.#......#.
.#.##....#
##.##.####

Tile 3307:
##.####...
#...#....#
#.###...##
#...#.#.#.
........#.
##..#..###
..........
.........#
#......#.#
##..###...

Tile 3853:
.......###
#.#....#..
#.#..#...#
.#.#.#....
#...#.....
....#....#
.#....#...
........#.
..........
##..#..#.#

Tile 3271:
#...#..#..
.#.#...#.#
#.........
.#..#..#..
.........#
.#...##..#
.##......#
##..#...#.
#...###...
..####.###

Tile 1249:
.#.#..###.
#........#
#......#..
#.#....#.#
.#.......#
......#...
..#..#....
..#.....#.
..#..#..##
..###.#...

Tile 1429:
#.#.####.#
#.........
...#...#..
.........#
...#......
##.#......
.........#
....#....#
#....#...#
#.###..###

Tile 1951:
##....###.
....###..#
.........#
...#.....#
##.......#
#....##..#
...#...##.
#.##...#.#
..........
#####.##.#

Tile 2111:
#########.
###.....#.
#..#...##.
#.......##
#...#.....
...#..#..#
#.#..#...#
#..#.....#
#.......#.
##...##.#.

Tile 2633:
.###..##..
###...#...
.#........
#.#......#
#.........
..#......#
#..#...#.#
..#.......
#..###..##
..#..###.#

Tile 2749:
..####....
..........
.......#..
.#.#...#..
...##.#..#
..#..##...
..#...#..#
....###..#
#......#..
.##.##.#.#

Tile 1193:
#########.
#.#...#...
...#......
....###...
.#...#....
...#......
..##.###.#
#.##......
#..#......
.####.##..

Tile 2377:
.####.##.#
##.##.....
..#..#..##
.#.##.....
##.......#
.#.....#..
...#.#...#
..##.....#
##.......#
..########

Tile 3187:
.#.###..##
..#.......
...#.#...#
....##....
#...#..#.#
##.#.#..##
..........
.........#
#....##..#
#..#####.#

Tile 2803:
..#.#...#.
.........#
...#...#..
........#.
....#..###
#..#....##
#.....#..#
.###.....#
...#......
##...##...

Tile 1549:
##...###.#
#....##...
.........#
....#....#
.......##.
.......###
#.#.#.....
#...#.....
#..#.#....
##..####.#

Tile 2531:
###..#..##
#......#..
....#...##
..#.....##
##.#.#..#.
.........#
...#......
##.#......
..#...#.#.
....##..#.

Tile 1481:
...##..###
#.#.....##
..#.......
.#.....##.
###.......
...#.....#
##........
#.##....#.
.........#
.#..#....#

Tile 1931:
...#...###
.....###..
.........#
..........
#..##....#
.....#....
.#....#...
#..#.....#
#.........
#.###.##.#

Tile 1217:
..######.#
..#......#
..#...#..#
#.........
..........
....#.##.#
......#.#.
.....#..##
##.......#
#..###.#.#

Tile 3137:
....#.###.
#..#.....#
.......#.#
#...#.#..#
.........#
#.####..#.
........#.
#.#.......
##..#...##
.##.#.#.##

Tile 2657:
#..#...###
.........#
...##..#..
###...#...
#...#..#.#
##........
....#..#..
..........
#...##....
...##.....

Tile 2939:
...#..###.
.###....#.
#........#
#.###.#...
..........
..#.......
#..#.....#
......#..#
#.........
######.#..

Tile 2273:
###.###..#
###....#..
..#.......
##....#..#
....#.....
#.#.......
.......##.
..........
..#.......
#.##.#.#..

Tile 2029:
.####.#.#.
.......#.#
#..##....#
#...#..#..
#....#.##.
..#......#
.#........
#.....#.#.
##........
#.#...####

Tile 1559:
..##.#.###
........#.
..#......#
..#.......
..........
.........#
#..##.....
.....#.#.#
..........
##.#.##...

Tile 1181:
....####..
#.#.......
.#.##.....
##.#.....#
#.#....#.#
#.....#...
....#.....
#.#......#
#..#......
....###..#

Tile 3221:
.#####..#.
#......##.
......###.
#......###
.........#
.##....#.#
...#..#...
...#.#.#..
#..##.....
#..#....#.

Tile 2467:
#..#######
.........#
#.........
.#..#.#...
...#...##.
#.#...#...
.........#
....##...#
#..#.#..#.
...#...#.#

Tile 2389:
####..##..
#.....#..#
....#.....
#.#.......
..#..#...#
......#.##
.....##...
....#.#...
##.....#..
##.......#

Tile 1823:
..#.....##
##.#.#...#
#...#.#..#
..........
....#.#.#.
...##.#.#.
.....#...#
...#.#.#..
....#....#
.#..#.....

Tile 1747:
...##...##
.#......#.
.........#
...#...#..
#.#.#.#..#
#........#
#.........
#....#....
#......#.#
##..##....

Tile 2551:
#...####.#
..#..#....
........#.
..#.......
.....#....
####.....#
.#.#..#..#
#.......##
.........#
....#.....

Tile 2707:
#.####.###
.........#
...#...#..
##......#.
#....#...#
#.........
#.#....#.#
#..#.....#
........##
...###...#

Tile 3229:
.##.#....#
.....#.#.#
#.#.......
#........#
.........#
..........
#.#...#.##
.......#.#
........#.
#....#..##

Tile 2617:
####.#..#.
#....#...#
...#.....#
#.....##.#
.........#
#.#...##.#
..........
#..#.#..##
.#...#.#.#
.#.##.....

Tile 3323:
#.###.#.#.
##........
......##..
.#.##.....
#......#.#
.........#
........##
.....#...#
#.......##
.####.#.#.

Tile 3989:
###.##.##.
#........#
#........#
#.#....#.#
#.....#..#
..##...#..
..##.....#
#....#....
#.#..####.
#.##...###

Tile 2399:
#.#.#.##.#
#...####.#
#..#.##..#
..........
#....#....
#....#....
##..#...##
..#.#.....
..#..#..##
..###.#.#.

Tile 3001:
#.#..#....
....#....#
#........#
###..##..#
..#..###..
##....#.##
...#..#..#
#.........
.......#..
#.....##..

Tile 2663:
####.##..#
#.#......#
###.#.....
.....##.##
.#.......#
....#..#.#
.....##...
......#...
#.#.......
#####..#..

Tile 3947:
###..#.#.#
#.........
.#....#...
##.....#.#
.##....##.
#.....#...
.#........
...#..##.#
#.#......#
#..##.##.#

Tile 3347:
#.#.#.#.##
..##.#....
.##..#..##
.#.#.##...
#.#..###..
##....#...
.....#.#..
#..#......
##....#...
....#..##.

Tile 2683:
#####.##..
###.....#.
##......##
........#.
#.........
..........
#......#.#
#...#....#
#.#.......
...#...#.#

Tile 3019:
###....##.
...##...##
#...##..##
##..#..#..
.#....#...
.#..#.....
......####
..#.....##
.#.#....##
##..###...

Tile 2753:
..#.#....#
#...#.....
#........#
##.##...##
..#.......
........#.
..#......#
#.#.##...#
..##......
#.....##..

Tile 2833:
##.#.####.
#.#...#.##
.....##...
#.......##
.#.......#
.......#..
#.........
.........#
.##......#
.##.##.#.#

Tile 2713:
#.#..#.#..
##..#.#...
##.#..##.#
#....#....
..#......#
#.....##.#
.......###
#.......##
##.......#
..#.##....

Tile 3251:
....###..#
..##.....#
#.##.#...#
##........
.#.......#
#.#.......
#..##.....
...#.##...
...#......
..######.#

Tile 3257:
...###..#.
#.##.....#
#...##...#
#.....#...
........##
#........#
.#...#....
.#...#.#..
#.#...##.#
.#..###.#.

Tile 2909:
..#####.#.
#.....##..
.....##.##
...#.....#
.......###
#.....#..#
...#......
.#.......#
#..#.....#
###..#.#.#

Tile 3793:
...###..#.
.#........
#..#.#.#..
#..#......
.#.......#
#........#
##........
...#..##..
#......#..
..#.###.##

Tile 1447:
...#.#.###
#..#.....#
#...#....#
.........#
#......#.#
##.......#
#.#.......
##........
.#.##..#..
..#..####.

Tile 3877:
#.......##
#.##....##
#.........
..#.##....
#..#.#...#
...#......
.###..#...
#.#....###
..........
#.##....#.

Tile 3499:
.####.##.#
#.....#..#
#.....#.##
.........#
#.......##
..........
#.........
#...#...#.
#.........
####..##.#

Tile 1667:
#.#.#...##
#.........
..#...#.##
....#.#.##
...#...#..
.....#....
#....##...
......##..
#..#.....#
.#######.#

Tile 3931:
#####....#
.#.....#..
#...#..##.
#..#.#...#
..........
.#........
.#.......#
#........#
..#.#....#
#...#.##.#

Tile 3593:
.##...##..
..#.#####.
##..#.##..
##........
.........#
......#...
....#.....
#..#.#.#..
..#.......
##.#..##..

Tile 1847:
###.#.#..#
#.......##
#.#.....##
..##.#...#
#....##...
#..##.....
#.#.....#.
......#..#
#....#....
#...##..##"#;
